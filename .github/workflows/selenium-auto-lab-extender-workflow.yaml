name: Extend Lab
on:
  workflow_dispatch:
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'
    - cron: '0 2 * * *'
    - cron: '0 4 * * *'
    - cron: '0 6 * * *'
    - cron: '0 8 * * *'
    - cron: '0 10 * * *'
    - cron: '0 12 * * *'
    - cron: '0 14 * * *'
    - cron: '0 16 * * *'
    - cron: '0 18 * * *'
    - cron: '0 20 * * *'
    - cron: '0 22 * * *'
jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out repo
        uses: actions/checkout@v2
      - name: Setting up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Installing package list
        run: apt list --installed    
      - name: Removing previous chrome instances on runner 
        run: sudo apt purge google-chrome-stable  
        
       # Need to fetch reqs if needed
      - name: Installing all necessary packages
        run: pip install chromedriver-autoinstaller selenium pyvirtualdisplay
      - name: Install xvfb
        run: sudo apt-get install xvfb

      - name: Running the Python script
        run: python lab_extender.py
        env:
          LAB_USERNAME: ${{ secrets.LAB_USERNAME }}
          LAB_PASSWORD: ${{ secrets.LAB_PASSWORD }}

      - name: Upload credentials
        run: |
          input=.aws/credentials

          while IFS= read -r line
          do
            if [[ $line == aws_* ]] ; then
              val=$(echo "$line" | cut -d'=' -f 2)
              if [[ $line == aws_access_key_id=* ]] ; then
                echo "KeyID: $val"
                echo "$val" | gh secret set AWS_ACCESS_KEY_ID --repo thomasix/cloud-native-software-development
              elif [[ $line == aws_secret_access_key=* ]] ; then
                echo "AccessKey: $val"
                echo "$val" | gh secret set AWS_SECRET_ACCESS_KEY --repo thomasix/cloud-native-software-development
              elif [[ $line == aws_session_token=* ]] ; then
                echo "SessionToken: $val"
                echo "$val" | gh secret set AWS_SESSION_TOKEN --repo thomasix/cloud-native-software-development
              fi
            fi
          done < "$input"
        env:
          GITHUB_TOKEN: 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
          OWNER: thomasix
          REPO: cloud-native-software-development

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: credentials
          path: .aws
